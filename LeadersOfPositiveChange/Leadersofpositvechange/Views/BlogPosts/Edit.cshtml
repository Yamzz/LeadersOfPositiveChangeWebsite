@model Leadersofpositvechange.Models.BlogUploadViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit BlogPost</h2>

@using (Html.BeginForm("Edit", "BlogPosts", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*<div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Current Image : ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @{
                        string filename = Path.GetFileName(Model.ImageName);
                    }
                    <img src="@Url.Content("~/Content/images/blog/" + filename)" width="300" height="220" />
                    <br />
                    <label>@filename</label>
                    @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            @*<div class="form-group">
                @Html.Label("Date Uploaded", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control" , @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
            </div>
        </div>*@

            <div class="form-group">
                @Html.Label("Upload New Image : ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextBoxFor(m => m.Files, new { type = "file", name = "Files" })
                    @*<input type="file" name="file" id="file" style="width:100%;" />*@
                    @*@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Short Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    @Html.TextAreaFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control", placeholder = "Message" }, cols = "65", rows = "4" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Post, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @*@Html.EditorFor(model => model.Post, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextAreaFor(m => m.Post, new { rows = "20", style = "resize:none;width:400px;", @class = "form-control input-lg textarea-editor" })
                    @Html.ValidationMessageFor(model => model.Post, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Posted by: ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.PostedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostedBy, "", new { @class = "text-danger" })
                </div>
            </div>




        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    </div>

}

<br />

@section Scripts {
    <!-- include libraries(jQuery, bootstrap) -->
    <link href="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css" rel="stylesheet">
    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>
    <script src="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js"></script>

    @*<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.js"></script>*@
    <link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote.css" rel="stylesheet">
    <script src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote.js"></script>
    <link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.css" rel="stylesheet">
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {
        // Initialize Editor
        $('.textarea-editor').summernote({
            height: 200, // set editor height
            minHeight: null, // set minimum height of editor
            maxHeight: null, // set maximum height of editor
            focus: true,  // set focus to editable area after initializing summernote  ,
            codemirror: { // codemirror options
                theme: 'yeti'
            }
        });
    });
</script>
